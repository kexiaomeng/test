package com.nari.sun.netty;

import io.netty.buffer.ByteBuf;
import io.netty.channel.ChannelHandlerAdapter;
import io.netty.channel.ChannelHandlerContext;
import io.netty.handler.timeout.IdleState;
import io.netty.handler.timeout.IdleStateEvent;

public abstract class AbstractHeartBeat  extends ChannelHandlerAdapter{

	
	@Override
	public void channelRead(ChannelHandlerContext ctx,Object obj){
		
	}
	
	@Override
	public void userEventTriggered(ChannelHandlerContext ctx,Object obj){
		if(obj instanceof IdleStateEvent){
			IdleStateEvent tmpEvent = (IdleStateEvent)obj;
			switch (tmpEvent.state()) {
			case READER_IDLE:
				dealIdleRead();
				break;
			case WRITER_IDLE:
				dealIdleWrite();
				break;

			default:
				break;
			}
		}
	}
	public abstract void handleData(ChannelHandlerContext ctx,ByteBuf obj);
	
	public abstract void dealIdleRead();
	public abstract void dealIdleWrite();
}
