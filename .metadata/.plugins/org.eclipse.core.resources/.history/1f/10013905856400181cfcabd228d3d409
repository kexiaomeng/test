package com.nari.sun.netty;

import java.net.SocketAddress;

import com.sun.corba.se.impl.orbutil.closure.Future;

import io.netty.bootstrap.ServerBootstrap;
import io.netty.channel.Channel;
import io.netty.channel.ChannelFuture;
import io.netty.channel.ChannelHandler;
import io.netty.channel.ChannelHandlerContext;
import io.netty.channel.ChannelInitializer;
import io.netty.channel.ChannelOption;
import io.netty.channel.ChannelPromise;
import io.netty.channel.EventLoopGroup;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.SocketChannel;
import io.netty.channel.socket.nio.NioServerSocketChannel;

public class NettyServer {
	
	private EventLoopGroup parent = new NioEventLoopGroup();
	private EventLoopGroup child  = new NioEventLoopGroup();
	private ServerBootstrap serverBootstrap = new ServerBootstrap();
	
	public NettyServer(){
		
	}
	public void bind(int port){
		serverBootstrap.group(parent, child).channel(NioServerSocketChannel.class).
			option(ChannelOption.SO_BACKLOG, 1024).childHandler(new ChannelInitializer<SocketChannel>() {
				@Override
				public void initChannel(SocketChannel arg0) throws Exception{
					arg0.pipeline().addLast("test", new TestHandler());
				}
			});
		
		ChannelFuture future = null;
		try {
			 future = serverBootstrap.bind(port).sync();
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			
		}
	}
	public static void main(String[] args) {
		
	}
}
